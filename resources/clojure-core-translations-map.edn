{"es"
 {"clojure.core"
  {"agent"
   {:resolved true,
    :existing "agent",
    :alias "agencia",
    :docstring "",
    :comment "or agente"},
   "and" {:macro true, :resolved true, :existing "and", :alias "y"},
   "apply" {:resolved true, :existing "apply", :alias "aplica"},
   "atom" {:resolved true, :existing "atom", :alias "átomo"},
   "boolean"
   {:resolved true,
    :existing "boolean",
    :alias "booleano",
    :docstring "",
    :comment
    "sounds like English but couldn't find a more specific word"},
   "butlast"
   {:resolved true,
    :existing "butlast",
    :alias "pero-último",
    :docstring "",
    :comment "not sure of what this should communicate."},
   "concat" {:resolved true, :existing "concat", :alias "social"},
   "cond"
   {:macro true,
    :resolved true,
    :existing "cond",
    :alias "dependela",
    :docstring "",
    :comment "means \"depending on the ...\" --> dependiendo de la"},
   "count" {:resolved true, :existing "count", :alias "cuenta"},
   "dec"
   {:resolved true,
    :existing "dec",
    :alias "extracto",
    :docstring "",
    :comment
    "based soley on translation. need more info/context to decide what connotations/denotations would be best"},
   "do" {:special-form true, :existing "do", :alias "haz"},
   "doall"
   {:resolved true,
    :existing "doall",
    :alias "haztodo",
    :docstring "",
    :comment "literally means do it all"},
   "dorun"
   {:resolved true,
    :existing "dorun",
    :alias "hazcorrer",
    :docstring "",
    :comment "could also just use \"haz\" meaning \"do\""},
   "doseq"
   {:macro true, :resolved true, :existing "doseq", :alias "hazsec"},
   "drop" {:resolved true, :existing "drop", :alias "baja"},
   "drop-while"
   {:resolved true, :existing "drop-while", :alias "baja-mientras"},
   "every?" {:resolved true, :existing "every?", :alias "cada?"},
   "false" {:special-form true, :existing "false", :alias "falso"},
   "false?" {:resolved true, :existing "false?", :alias "falso?"},
   "filter" {:resolved true, :existing "filter", :alias "forma"},
   "find" {:resolved true, :existing "find", :alias "encuentra"},
   "first" {:resolved true, :existing "first", :alias "primero"},
   "flatten" {:resolved true, :existing "flatten", :alias "aplana"},
   "for"
   {:macro true,
    :resolved true,
    :existing "for",
    :alias "para",
    :docstring "",
    :comment "could be por"},
   "get" {:resolved true, :existing "get", :alias "consigue"},
   "hash-map"
   {:resolved true, :existing "hash-map", :alias "hachís-mapa"},
   "hash-set"
   {:resolved true,
    :existing "hash-set",
    :alias "hachís-pone",
    :docstring "",
    :comment "could use fijo or colocar as \"set\""},
   "identity"
   {:resolved true, :existing "identity", :alias "identidad"},
   "if" {:special-form true, :existing "if", :alias "si"},
   "if-not"
   {:macro true, :resolved true, :existing "if-not", :alias "si-no"},
   "inc"
   {:resolved true,
    :existing "inc",
    :alias "carga",
    :docstring "",
    :comment "translated to \"load\" in english"},
   "interpose"
   {:resolved true, :existing "interpose", :alias "interpone"},
   "keep" {:resolved true, :existing "keep", :alias "guardar"},
   "last" {:resolved true, :existing "last", :alias "último"},
   "let"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "let",
    :alias "deja"},
   "list" {:resolved true, :existing "list", :alias "enumera"},
   "loop"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "loop",
    :alias "darvuelta",
    :docstring "",
    :comment "actually two words \"dar vuelta\""},
   "map" {:resolved true, :existing "map", :alias "mapa"},
   "next"
   {:resolved true,
    :existing "next",
    :alias "próximo",
    :docstring "",
    :comment "this is used in the present"},
   "not" {:resolved true, :existing "not", :alias "no"},
   "or" {:macro true, :resolved true, :existing "or", :alias "o"},
   "print" {:resolved true, :existing "print", :alias "imprime"},
   "println"
   {:resolved true,
    :existing "println",
    :alias "imprimeln",
    :docstring "",
    :comment "ln means \"line\" in English"},
   "range" {:resolved true, :existing "range", :alias "gama"},
   "remove" {:resolved true, :existing "remove", :alias "quita"},
   "rest"
   {:resolved true,
    :existing "rest",
    :alias "lodemás",
    :docstring "",
    :comment
    "should we separate the words into \"lo demás\" or shorten it to \"demás\"? Could also use \"el resto\""},
   "reverse" {:resolved true, :existing "reverse", :alias "invierte"},
   "second" {:resolved true, :existing "second", :alias "segundo"},
   "seq"
   {:resolved true,
    :existing "seq",
    :alias "sec",
    :docstring "",
    :comment "short for \"secuenciar\""},
   "set" {:resolved true, :existing "set", :alias "pone"},
   "slurp"
   {:resolved true,
    :existing "slurp",
    :alias "ventosa",
    :docstring "",
    :comment "if this should be a verb"},
   "some" {:resolved true, :existing "some", :alias "alguno"},
   "spit"
   {:resolved true,
    :existing "spit",
    :alias "escupe",
    :docstring "",
    :comment "could be \"saliva\" if it's not an action"},
   "str"
   {:resolved true,
    :existing "str",
    :alias "crd",
    :docstring "",
    :comment "short for \"cuerda\" which translates to string"},
   "take" {:resolved true, :existing "take", :alias "toma"},
   "take-while"
   {:resolved true, :existing "take-while", :alias "toma-mientras"},
   "true" {:special-form true, :existing "true", :alias "cierto"},
   "true?" {:resolved true, :existing "true?", :alias "cierto?"},
   "when"
   {:macro true, :resolved true, :existing "when", :alias "cuando"},
   "when-not"
   {:macro true,
    :resolved true,
    :existing "when-not",
    :alias "cuando-no"}}},
 "id"
 {"clojure.core"
  {"aget"
   {:resolved true,
    :special-form true,
    :existing "aget",
    :alias "amendapatkan"},
   "and" {:macro true, :resolved true, :existing "and", :alias "dan"},
   "apply" {:resolved true, :existing "apply", :alias "menerapkan"},
   "aset"
   {:resolved true,
    :special-form true,
    :existing "aset",
    :alias "amengatur"},
   "assoc" {:resolved true, :existing "assoc", :alias "rekan"},
   "assoc-in"
   {:resolved true, :existing "assoc-in", :alias "rekan-di"},
   "def" {:special-form true, :existing "def", :alias "menetapkan"},
   "defn"
   {:macro true,
    :resolved true,
    :special-form true,
    :existing "defn",
    :alias "dfungsi"},
   "fn"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "fn",
    :alias "fungsi"},
   "if" {:special-form true, :existing "if", :alias "jika"},
   "let"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "let",
    :alias "membiarkan"},
   "repeatedly"
   {:resolved true, :existing "repeatedly", :alias "berkali-kali"}}},
 "ko"
 {"clojure.core"
  {"aget"
   {:resolved true,
    :special-form true,
    :existing "aget",
    :alias "배열을얻을",
    :docstring "fun , "},
   "and" {:macro true, :resolved true, :existing "and", :alias "과"},
   "apply" {:resolved true, :existing "apply", :alias "대다"},
   "aset"
   {:resolved true, :special-form true, :existing "aset", :alias "세트"},
   "assoc" {:resolved true, :existing "assoc", :alias "동무"},
   "assoc-in" {:resolved true, :existing "assoc-in", :alias "에연결"},
   "def" {:special-form true, :existing "def", :alias "밝히다"},
   "defn"
   {:macro true,
    :resolved true,
    :special-form true,
    :existing "defn",
    :alias "함수를정의"},
   "fn"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "fn",
    :alias "기능"},
   "if" {:special-form true, :existing "if", :alias "만약"},
   "let"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "let",
    :alias "방해"},
   "repeatedly"
   {:resolved true, :existing "repeatedly", :alias "자꾸"}}},
 "ta"
 {"clojure.core"
  {"and"
   {:macro true, :resolved true, :existing "and", :alias "மற்றும்"},
   "apply" {:resolved true, :existing "apply", :alias "செயல்படுத்து"},
   "atom" {:resolved true, :existing "atom", :alias "அணு"},
   "boolean" {:resolved true, :existing "boolean", :alias "பூலியன்"},
   "butlast"
   {:resolved true, :existing "butlast", :alias "கடைசியின்றி"},
   "concat" {:resolved true, :existing "concat", :alias "தொடு"},
   "cond"
   {:macro true, :resolved true, :existing "cond", :alias "பொறுத்து"},
   "count" {:resolved true, :existing "count", :alias "எண்ணு"},
   "dec" {:resolved true, :existing "dec", :alias "இறக்கு"},
   "def" {:special-form true, :existing "def", :alias "வரையறு"},
   "defn"
   {:macro true,
    :resolved true,
    :special-form true,
    :existing "defn",
    :alias "வரையறு-செயல்கூறு"},
   "do" {:special-form true, :existing "do", :alias "செய்"},
   "doall" {:resolved true, :existing "doall", :alias "செய்யெல்லாம்"},
   "dorun" {:resolved true, :existing "dorun", :alias "செய்யோட்டம்"},
   "doseq"
   {:macro true,
    :resolved true,
    :existing "doseq",
    :alias "செய்வரிசை"},
   "drop" {:resolved true, :existing "drop", :alias "விடு"},
   "drop-while"
   {:resolved true, :existing "drop-while", :alias "விடு-என்னும்வரை"},
   "every?"
   {:resolved true, :existing "every?", :alias "ஒவ்வொன்றுமா?"},
   "false" {:special-form true, :existing "false", :alias "பொய்மை"},
   "false?" {:resolved true, :existing "false?", :alias "பொய்மையா?"},
   "filter" {:resolved true, :existing "filter", :alias "வடி"},
   "find" {:resolved true, :existing "find", :alias "கண்டுபிடி"},
   "first" {:resolved true, :existing "first", :alias "முதல்"},
   "flatten"
   {:resolved true, :existing "flatten", :alias "தட்டையாக்கு"},
   "fn"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "fn",
    :alias "செயல்கூறு"},
   "for"
   {:macro true,
    :resolved true,
    :existing "for",
    :alias "ஒன்றொன்றுக்கு"},
   "get" {:resolved true, :existing "get", :alias "பெறு"},
   "hash-map"
   {:resolved true,
    :existing "hash-map",
    :alias "புலவெண்-விவரணையாக்கம்"},
   "hash-set"
   {:resolved true, :existing "hash-set", :alias "புலவெண்-அமைவு"},
   "identity"
   {:resolved true, :existing "identity", :alias "அடையாளம்"},
   "if" {:special-form true, :existing "if", :alias "எனில்"},
   "if-not"
   {:macro true,
    :resolved true,
    :existing "if-not",
    :alias "இல்லெனில்"},
   "inc" {:resolved true, :existing "inc", :alias "ஏற்று"},
   "interleave"
   {:resolved true, :existing "interleave", :alias "பின்னு"},
   "interpose"
   {:resolved true, :existing "interpose", :alias "இடைபொருத்து"},
   "keep" {:resolved true, :existing "keep", :alias "கொள்"},
   "last" {:resolved true, :existing "last", :alias "கடைசி"},
   "let"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "let",
    :alias "வைத்துக்கொள்"},
   "list" {:resolved true, :existing "list", :alias "பட்டியல்"},
   "loop"
   {:macro true,
    :special-form true,
    :resolved true,
    :existing "loop",
    :alias "சுற்று"},
   "map" {:resolved true, :existing "map", :alias "விவரி"},
   "next" {:resolved true, :existing "next", :alias "அடுத்த"},
   "not" {:resolved true, :existing "not", :alias "அன்று"},
   "or" {:macro true, :resolved true, :existing "or", :alias "அல்லது"},
   "print" {:resolved true, :existing "print", :alias "அச்சிடு"},
   "println"
   {:resolved true, :existing "println", :alias "வரி-அச்சிடு"},
   "range" {:resolved true, :existing "range", :alias "வீச்சு"},
   "reduce" {:resolved true, :existing "reduce", :alias "இறுக்கு"},
   "remove" {:resolved true, :existing "remove", :alias "அகற்று"},
   "rest" {:resolved true, :existing "rest", :alias "மீதி"},
   "reverse" {:resolved true, :existing "reverse", :alias "புரட்டு"},
   "second" {:resolved true, :existing "second", :alias "இரண்டாம்"},
   "seq" {:resolved true, :existing "seq", :alias "வரிசை"},
   "set" {:resolved true, :existing "set", :alias "அமைவு"},
   "some" {:resolved true, :existing "some", :alias "எதாவது"},
   "str" {:resolved true, :existing "str", :alias "தொடை"},
   "take" {:resolved true, :existing "take", :alias "எடு"},
   "take-while"
   {:resolved true, :existing "take-while", :alias "எடு-என்னும்வரை"},
   "true" {:special-form true, :existing "true", :alias "வாய்மை"},
   "true?" {:resolved true, :existing "true?", :alias "உண்மையா?"},
   "when"
   {:macro true,
    :resolved true,
    :existing "when",
    :alias "என்னும்போது"},
   "when-not"
   {:macro true,
    :resolved true,
    :existing "when-not",
    :alias "இல்லென்னும்-போது"}}}}
